// Defines processes used in testing
import "lib/globals.act";

export
template <pint N>
defproc active_handshaker(globals g; bool i[N], o[N]) {
    // a simple active handshaker
    (; n : N :
        prs <g.Vdd,g.GND> {
            ~g.sReset & ~i[n] -> o[n]+
            g.pReset  | i[n]  -> o[n]-
        }
    )
}

export
template <pint N>
defproc _active_handshaker(globals g; bool _i[N], _o[N]) {
    // active low version of active_handshaker
    (; n : N :
        prs <g.Vdd,g.GND> {
            g._sReset & _i[n]   -> _o[n]-
            ~g._pReset | ~_i[n] -> _o[n]+
        }
    )
}

export
template <pint N>
defproc passive_handshaker(bool i[N], o[N]) {
    // a simple passive handshaker
    (; n : N :
        prs {
            i[n]  => o[n]+ // just a wire with delay
        }
    )
}

export
template <pint N>
defproc TEST_TEST(globals g) {
    // tests active and passive handshakers
    active_handshaker<N> a(g,,);
    passive_handshaker<N> p(,);
    
    a.i = p.o;
    a.o = p.i;
}
